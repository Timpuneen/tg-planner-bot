from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from config import POPULAR_TIMEZONES
from typing import List, Tuple, Optional

def get_timezone_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    keyboard = []
    for tz_code, tz_name in POPULAR_TIMEZONES:
        keyboard.append([InlineKeyboardButton(text=tz_name, callback_data=f"tz_{tz_code}")])
    
    keyboard.append([InlineKeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", callback_data="send_location")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_main_menu_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (custom keyboard)"""
    keyboard = [
        [KeyboardButton(text="‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")],
        [KeyboardButton(text="üìù –ó–∞–¥–∞—á–∏")],
        [KeyboardButton(text="üìî –î–Ω–µ–≤–Ω–∏–∫")],
        [KeyboardButton(text="üåç –ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True, one_time_keyboard=False)

def get_reminders_menu_keyboard():
    """–ú–µ–Ω—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    keyboard = [
        [KeyboardButton(text="‚ûï –†–∞–∑–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
        [KeyboardButton(text="üîÑ –ü–æ–≤—Ç–æ—Ä—è—é—â–µ–µ—Å—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")],
        [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")],
        [KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_tasks_menu_keyboard():
    """–ú–µ–Ω—é –∑–∞–¥–∞—á"""
    keyboard = [
        [KeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É")],
        [KeyboardButton(text="üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á")],
        [KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_task_view_menu_keyboard():
    """–ú–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞—á"""
    keyboard = [
        [KeyboardButton(text="üî• –ê–∫—Ç–∏–≤–Ω—ã–µ")],
        [KeyboardButton(text="‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ")],
        [KeyboardButton(text="‚ùå –ù–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ")],
        [KeyboardButton(text="‚ö†Ô∏è –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ")],
        [KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_category_selection_keyboard(categories: List[Tuple[int, str]], max_display: int = 10):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á–∏"""
    keyboard = []
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–º–∞–∫—Å–∏–º—É–º max_display)
    displayed_categories = categories[:max_display]
    for category_id, category_name in displayed_categories:
        keyboard.append([InlineKeyboardButton(
            text=category_name, 
            callback_data=f"category_select_{category_id}"
        )])
    
    # –û–ø—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    keyboard.extend([
        [InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="category_new")],
        [InlineKeyboardButton(text="üö´ –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="category_none")]
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_deadline_selection_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–¥–ª–∞–π–Ω–∞"""
    keyboard = [
        [InlineKeyboardButton(text="üìÖ –î–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è", callback_data="deadline_today")],
        [InlineKeyboardButton(text="üìÖ –î–æ –∫–æ–Ω—Ü–∞ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è", callback_data="deadline_tomorrow")],
        [InlineKeyboardButton(text="üìÜ –î–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏", callback_data="deadline_week")],
        [InlineKeyboardButton(text="üóì –î–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞", callback_data="deadline_month")],
        [InlineKeyboardButton(text="üìä –î–æ –∫–æ–Ω—Ü–∞ –≥–æ–¥–∞", callback_data="deadline_year")],
        [InlineKeyboardButton(text="‚è∞ –°–≤–æ–π –¥–µ–¥–ª–∞–π–Ω", callback_data="deadline_custom")],
        [InlineKeyboardButton(text="üö´ –ë–µ–∑ –¥–µ–¥–ª–∞–π–Ω–∞", callback_data="deadline_none")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_task_action_keyboard(task_id: int, task_status: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–¥–∞—á–µ–π"""
    keyboard = []
    
    if task_status == 'active':
        keyboard.extend([
            [InlineKeyboardButton(text="‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞", callback_data=f"task_complete_{task_id}")],
            [InlineKeyboardButton(text="‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", callback_data=f"task_fail_{task_id}")],
            [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"task_delete_{task_id}")]
        ])
    elif task_status in ['completed', 'failed']:
        keyboard.append([InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"task_delete_{task_id}")])
    elif task_status == 'overdue':
        keyboard.extend([
            [InlineKeyboardButton(text="‚è∞ –ü—Ä–æ–¥–ª–∏—Ç—å", callback_data=f"task_extend_{task_id}")],
            [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"task_delete_{task_id}")]
        ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_diary_menu_keyboard():
    """–ú–µ–Ω—é –¥–Ω–µ–≤–Ω–∏–∫–∞"""
    keyboard = [
        [KeyboardButton(text="‚úçÔ∏è –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å")],
        [KeyboardButton(text="üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø–∏—Å–µ–π")],
        [KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

def get_back_to_main_keyboard():
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
        resize_keyboard=True
    )
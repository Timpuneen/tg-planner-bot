from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from keyboards.keyboards import (
    get_main_menu_keyboard,
    get_reminders_menu_keyboard,
    get_tasks_menu_keyboard,
    get_diary_menu_keyboard,
    get_timezone_keyboard
)

router = Router()

@router.message(lambda message: message.text in ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])
async def main_menu(message: types.Message, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    # –û—á–∏—â–∞–µ–º –ª—é–±–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    await message.answer(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_menu_keyboard()
    )

@router.message(lambda message: message.text == "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
async def reminders_menu(message: types.Message, state: FSMContext):
    """–ú–µ–Ω—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    await state.clear()
    
    await message.answer(
        "üìã –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_reminders_menu_keyboard()
    )

@router.message(lambda message: message.text == "üìù –ó–∞–¥–∞—á–∏")
async def tasks_menu(message: types.Message, state: FSMContext):
    """–ú–µ–Ω—é –∑–∞–¥–∞—á"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    await state.clear()
    
    await message.answer(
        "üìù –ó–∞–¥–∞—á–∏\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_tasks_menu_keyboard()
    )

@router.message(lambda message: message.text == "üìî –î–Ω–µ–≤–Ω–∏–∫")
async def diary_menu(message: types.Message, state: FSMContext):
    """–ú–µ–Ω—é –¥–Ω–µ–≤–Ω–∏–∫–∞"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    await state.clear()
    
    await message.answer(
        "üìî –î–Ω–µ–≤–Ω–∏–∫\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_diary_menu_keyboard()
    )

@router.message(lambda message: message.text == "üåç –ò–∑–º–µ–Ω–∏—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å")
async def change_timezone_menu(message: types.Message, state: FSMContext):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –Ω–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª
    await state.clear()
    
    await message.answer(
        "üåç –ò–∑–º–µ–Ω–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å:",
        reply_markup=get_timezone_keyboard()
    )